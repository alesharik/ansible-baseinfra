services:
  log:
    image: goharbor/harbor-log:v2.11.0
    container_name: harbor-log
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    volumes:
      - /var/log/harbor/:/var/log/docker/:z
      - type: bind
        source: ./common/config/log/logrotate.conf
        target: /etc/logrotate.d/logrotate.conf
      - type: bind
        source: ./common/config/log/rsyslog_docker.conf
        target: /etc/rsyslog.d/rsyslog_docker.conf
    ports:
      - "127.0.0.1:1514:10514"
    networks:
      - harbor
      - db
      - redis
  registry:
    image: goharbor/registry-photon:v2.11.0
    container_name: registry
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - "{{ dir.data }}/harbor/registry:/storage:z"
      - ./common/config/registry/:/etc/registry/:z
      - type: bind
        source: "{{ dir.data }}/harbor/secret/registry/root.crt"
        target: /etc/registry/root.crt
      - type: bind
        source: ./common/config/shared/trust-certificates
        target: /harbor_cust_cert
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/core.crt"
        target: /harbor_cust_cert/core.crt
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/registry.crt"
        target: /etc/harbor/tls/registry.crt
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/registry.key"
        target: /etc/harbor/tls/registry.key
    networks:
      - harbor
      - db
      - redis
    depends_on:
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "registry"
  registryctl:
    image: goharbor/harbor-registryctl:v2.11.0
    container_name: registryctl
    env_file:
      - ./common/config/registryctl/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - "{{ dir.data }}/harbor/registry:/storage:z"
      - ./common/config/registry/:/etc/registry/:z
      - type: bind
        source: ./common/config/registryctl/config.yml
        target: /etc/registryctl/config.yml
      - type: bind
        source: ./common/config/shared/trust-certificates
        target: /harbor_cust_cert
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/registryctl.crt"
        target: /etc/harbor/ssl/registryctl.crt
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/registryctl.key"
        target: /etc/harbor/ssl/registryctl.key
    networks:
      - harbor
      - db
      - redis
    depends_on:
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "registryctl"
  core:
    image: goharbor/harbor-core:v2.11.0
    container_name: harbor-core
    env_file:
      - ./common/config/core/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
    volumes:
      - "{{ dir.data }}/harbor/ca_download/:/etc/core/ca/:z"
      - "{{ dir.data }}/harbor/:/data/:z"
      - ./common/config/core/certificates/:/etc/core/certificates/:z
      - type: bind
        source: ./common/config/core/app.conf
        target: /etc/core/app.conf
      - type: bind
        source: "{{ dir.data }}/harbor/secret/core/private_key.pem"
        target: /etc/core/private_key.pem
      - type: bind
        source: {{ dir.data }}/harbor/secret/keys/secretkey
        target: /etc/core/key
      - type: bind
        source: ./common/config/shared/trust-certificates
        target: /harbor_cust_cert
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/core.crt"
        target: /etc/harbor/ssl/core.crt
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/core.key"
        target: /etc/harbor/ssl/core.key
    networks:
      - harbor
      - db
      - redis
    depends_on:
      - log
      - registry
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "core"
  portal:
    image: goharbor/harbor-portal:v2.11.0
    container_name: harbor-portal
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    volumes:
      - type: bind
        source: ./common/config/portal/nginx.conf
        target: /etc/nginx/nginx.conf
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/portal.crt"
        target: /etc/harbor/tls/portal.crt
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/portal.key"
        target: /etc/harbor/tls/portal.key
    networks:
      - harbor
      - db
      - redis
    depends_on:
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "portal"

  jobservice:
    image: goharbor/harbor-jobservice:v2.11.0
    container_name: harbor-jobservice
    env_file:
      - ./common/config/jobservice/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - "{{ dir.data }}/harbor/job_logs:/var/log/jobs:z"
      - type: bind
        source: ./common/config/jobservice/config.yml
        target: /etc/jobservice/config.yml
      - type: bind
        source: ./common/config/shared/trust-certificates
        target: /harbor_cust_cert
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/job_service.crt"
        target: /etc/harbor/ssl/job_service.crt
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/job_service.key"
        target: /etc/harbor/ssl/job_service.key
    networks:
      - harbor
      - db
      - redis
    depends_on:
      - core
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "jobservice"
  proxy:
    image: goharbor/nginx-photon:v2.11.0
    container_name: nginx
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    volumes:
      - ./common/config/nginx:/etc/nginx:z
      - type: bind
        source: ./common/config/shared/trust-certificates
        target: /harbor_cust_cert
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/proxy.crt"
        target: /etc/harbor/tls/proxy.crt
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/proxy.key"
        target: /etc/harbor/tls/proxy.key
    networks:
      - harbor
      - db
      - proxy
      - redis
    depends_on:
      - registry
      - core
      - portal
      - log
    environment:
      VIRTUAL_HOST: "{{ harbor.hosts | join(',') }}"
      VIRTUAL_PORT: 8080
      LETSENCRYPT_HOST: "{{ harbor.hosts | join(',') }}"
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "proxy"
  trivy-adapter:
    container_name: trivy-adapter
    image: goharbor/trivy-adapter-photon:v2.11.0
    restart: always
    cap_drop:
      - ALL
    depends_on:
      - log
    networks:
      - harbor
      - db
      - redis
    volumes:
      - type: bind
        source: "{{ dir.data }}/harbor/trivy-adapter/trivy"
        target: /home/scanner/.cache/trivy
      - type: bind
        source: "{{ dir.data }}/harbor/trivy-adapter/reports"
        target: /home/scanner/.cache/reports
      - type: bind
        source: ./common/config/shared/trust-certificates
        target: /harbor_cust_cert
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/trivy_adapter.crt"
        target: /etc/harbor/ssl/trivy_adapter.crt
      - type: bind
        source: "{{ dir.ansible }}/harbor/tls/trivy_adapter.key"
        target: /etc/harbor/ssl/trivy_adapter.key
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "trivy-adapter"
    env_file:
      ./common/config/trivy-adapter/env
  exporter:
    image: goharbor/harbor-exporter:v2.11.0
    container_name: harbor-exporter
    env_file:
      - ./common/config/exporter/env
    restart: always
    networks:
      - harbor
      - db
    depends_on:
      - core
    volumes:
      - type: bind
        source: ./common/config/shared/trust-certificates
        target: /harbor_cust_cert
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "exporter"
networks:
  harbor:
    name: harbor
    external: false
  proxy:
    name: nginx-proxy
    external: true
  db:
    name: "{{ harbor.db.network }}"
    external: true
  redis:
    name: "{{ harbor.redis.network }}"
    external: true
